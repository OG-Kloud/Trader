package net.kloudspace.real.trade;

import java.util.Random;

import net.minecraft.enchantment.Enchantment;
import net.minecraft.enchantment.EnchantmentData;
import net.minecraft.entity.passive.EntityVillager;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.village.MerchantRecipe;
import net.minecraft.village.MerchantRecipeList;
import shukaro.artifice.ArtificeItems;
import cpw.mods.fml.common.registry.VillagerRegistry.IVillageTradeHandler;

public class TradeHandler implements IVillageTradeHandler{
	
	

	@Override
	public void manipulateTradesForVillager(EntityVillager villager, MerchantRecipeList recipeList, Random random) {
		int x = random.nextInt(12);
		int y = random.nextInt(20);
		int BUY_WHEAT = random.nextInt(22);
		int BUY_POTATO = random.nextInt(19);
		int PUMPKINS = random.nextInt(13);
		switch(villager.getProfession()) {
		case 0: // FARMER
			recipeList.clear();
			recipeList.add(new MerchantRecipe(new ItemStack(Items.wheat, 18 + random.nextInt(4)), new ItemStack(ArtificeItems.itemCoin,1,0)));
			recipeList.add(new MerchantRecipe(new ItemStack(Items.potato, 15 + random.nextInt(4)), new ItemStack(ArtificeItems.itemCoin,1,0)));
			recipeList.add(new MerchantRecipe(new ItemStack(Items.carrot, 15 + random.nextInt(4)), new ItemStack(ArtificeItems.itemCoin,1,0)));
			recipeList.add(new MerchantRecipe(new ItemStack(Blocks.pumpkin, 8 + random.nextInt(5)), new ItemStack(ArtificeItems.itemCoin,1,0)));
			recipeList.add(new MerchantRecipe(new ItemStack(Blocks.melon_block, 7 + random.nextInt(5)), new ItemStack(ArtificeItems.itemCoin,1,0)));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin, 1,0), new ItemStack(Items.bread, 2 + random.nextInt(2))));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,1,0), new ItemStack(Items.pumpkin_pie, 1 + random.nextInt(2))));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,1,0), new ItemStack(Items.apple, 1 + random.nextInt(4))));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,1,0), new ItemStack(Items.cookie, 1 + random.nextInt(5))));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,1,0), new ItemStack(Items.cake, 1)));
			break;
		case 1: // LIBRARIAN
			recipeList.clear();
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,1,0), new ItemStack(Items.paper, 24 + random.nextInt(12))));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,1,0), new ItemStack(Items.book,8 + random.nextInt(2))));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,1,0), new ItemStack(Items.written_book, 1 + random.nextInt(1))));
//			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0), Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.enchantmentsList[x], 1 + random.nextInt(18)))));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.aquaAffinity, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.baneOfArthropods, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.blastProtection, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.efficiency, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.featherFalling, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.fireAspect, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.fireProtection, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.flame, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.fortune, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.infinity, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.knockback, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.looting, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.power, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.projectileProtection, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.protection, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.punch, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.respiration, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.sharpness, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.silkTouch, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.smite, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.thorns, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.unbreaking, 5 + random.nextInt(14))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(new ItemStack(Items.compass,1), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(2), 1)));
			recipeList.add(new MerchantRecipe(new ItemStack(Blocks.bookshelf,1), new ItemStack(ArtificeItems.itemCoin,3 + random.nextInt(1))));
			recipeList.add(new MerchantRecipe(new ItemStack(Items.clock,1), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(2),1)));
			recipeList.add(new MerchantRecipe(new ItemStack(Blocks.glass_pane,3 + random.nextInt(2), random.nextInt(15)), new ItemStack(ArtificeItems.itemCoin,1,0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.aquaAffinity, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(13),1)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.baneOfArthropods, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.blastProtection, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.efficiency, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.featherFalling, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.fireAspect, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.fireProtection, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.flame, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.fortune, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.infinity, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.knockback, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.looting, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.power, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.projectileProtection, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.protection, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.punch, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.respiration, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.sharpness, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.silkTouch, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.smite, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.thorns, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.unbreaking, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.aquaAffinity, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),1)));			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.baneOfArthropods, 11 + random.nextInt(34))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.blastProtection, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.efficiency, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.featherFalling, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.fireAspect, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.fireProtection, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.flame, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.fortune, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.infinity, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.knockback, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.looting, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.power, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.projectileProtection, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.protection, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.punch, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.respiration, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.sharpness, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.silkTouch, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.smite, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.thorns, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(Enchantment.unbreaking, 17 + random.nextInt(54))), new ItemStack(ArtificeItems.itemCoin,1 + random.nextInt(63),0)));
			recipeList.add(new MerchantRecipe(new ItemStack(Items.name_tag,1,0), new ItemStack(ArtificeItems.itemCoin,4 + random.nextInt(2),1)));
			break;
		case 2: // PRIEST
			recipeList.clear();
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin, 2), new ItemStack(Items.potato, 1)));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,2,1), new ItemStack(Items.baked_potato, 1)));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,2,2), new ItemStack(Items.apple, 1)));
			break;
		case 3: // BLACKSMITH
			recipeList.clear();
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin, 2), new ItemStack(Items.potato, 1)));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,2,1), new ItemStack(Items.baked_potato, 1)));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,2,2), new ItemStack(Items.apple, 1)));
			break;
		case 4: // BUTCHER
			recipeList.clear();
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin, 2), new ItemStack(Items.potato, 1)));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,2,1), new ItemStack(Items.baked_potato, 1)));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,2,2), new ItemStack(Items.apple, 1)));
			break;
		case 5: 
			recipeList.clear();
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin, 2), new ItemStack(Items.potato, 1)));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,2,1), new ItemStack(Items.baked_potato, 1)));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,2,2), new ItemStack(Items.apple, 1)));
			break;
		case 6:
			recipeList.clear();
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin, 2), new ItemStack(Items.potato, 1)));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,2,1), new ItemStack(Items.baked_potato, 1)));
			recipeList.add(new MerchantRecipe(new ItemStack(ArtificeItems.itemCoin,2,2), new ItemStack(Items.apple, 1)));
			break;
		}
		
		
	}

}
